// Code generated by MockGen. DO NOT EDIT.
// Source: ../service/member_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/hwikpass/hwik-sample/model"
)

// MockMemberServiceInterface is a mock of MemberServiceInterface interface.
type MockMemberServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMemberServiceInterfaceMockRecorder
}

// MockMemberServiceInterfaceMockRecorder is the mock recorder for MockMemberServiceInterface.
type MockMemberServiceInterfaceMockRecorder struct {
	mock *MockMemberServiceInterface
}

// NewMockMemberServiceInterface creates a new mock instance.
func NewMockMemberServiceInterface(ctrl *gomock.Controller) *MockMemberServiceInterface {
	mock := &MockMemberServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMemberServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemberServiceInterface) EXPECT() *MockMemberServiceInterfaceMockRecorder {
	return m.recorder
}

// CallRentalSuccess mocks base method.
func (m *MockMemberServiceInterface) CallRentalSuccess(param *model.IotPolicy) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CallRentalSuccess", param)
	ret0, _ := ret[0].(error)
	return ret0
}

// CallRentalSuccess indicates an expected call of CallRentalSuccess.
func (mr *MockMemberServiceInterfaceMockRecorder) CallRentalSuccess(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CallRentalSuccess", reflect.TypeOf((*MockMemberServiceInterface)(nil).CallRentalSuccess), param)
}
